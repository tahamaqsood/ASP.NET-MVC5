using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.ComponentModel.DataAnnotations;
using System.ComponentModel;

namespace WebForm.Models
{
    public class Doctor
    {
        //ID
        [Required(ErrorMessage ="Doctor Id is mandatory")]
        [DisplayName("ID")]
        public int DoctorID { get; set; }



        //Name
        [Required(ErrorMessage ="Doctor Name is mandatory")]
        [DisplayName("Name")]
        [MinLength(3,ErrorMessage ="Your name should not have less 3 characters")]
        [MaxLength(15,ErrorMessage ="Your name should not have more 15 characters")]
        public string DoctorName { get; set; }



        //Age
        [Required(ErrorMessage = "Doctor Age is mandatory")]
        [DisplayName("Age")]
        [Range(20,60,ErrorMessage ="You are not capable for this job")]
        public int DoctorAge { get; set; }



        //Gender
        [Required(ErrorMessage = "Doctor Gender is mandatory")]
        [DisplayName("Gender")]
        public string DoctorGender { get; set; }



        //Address
        [Required(ErrorMessage = "Doctor Address is mandatory")]
        [DisplayName("Address")]
        [DataType(DataType.MultilineText)]
        public string DoctorAddress { get; set; }



        //Email
        [Required(ErrorMessage = "Doctor Email is mandatory")]
        [DisplayName("Email")]
        [RegularExpression(@"^([a-zA-Z0-9_\-\.]+)@([a-zA-Z0-9_\-\.]+)\.([a-zA-Z]{2,5})$",ErrorMessage ="Invalid Email")]
        public string DoctorEmail { get; set; }



        //Password
        [Required(ErrorMessage = "Doctor Password is mandatory")]
        [DisplayName("Password")]
        [DataType(DataType.Password)]
        [RegularExpression(@"(?=^.{8,}$)((?=.*\d)|(?=.*\W+))(?![.\n])(?=.*[A-Z])(?=.*[a-z]).*$",ErrorMessage ="Your password must contain '8 Characters','Upper case','lower case','symbols'")]
        public string DoctorPassword { get; set; }



        //Confirm Password
        [Required(ErrorMessage = "Confirm Password is mandatory")]
        [DisplayName("Confirm Password")]
        [Compare("DoctorPassword",ErrorMessage ="Password is not matched")]
        [DataType(DataType.Password)]
        public string DoctorConfirmPassword { get; set; }



        //Date Of Birth
        [Required(ErrorMessage = "Date Of Birth is mandatory")]
        [DisplayName("Date Of Birth")]
        [DataType(DataType.Date)]
        public string DoctorDateOfBirth { get; set; }



        //Check Box
        [DisplayName(" I agree to all terms and policies ")]
        public bool CheckBox { get; set; }



        //Organization Name
        [DisplayName("Organization Name")]
        [ReadOnly(true)]
        public string DoctorOrganizationName { get; set; }
    }
}