@model LoginAndSignup.Models.UserTable
@{
    ViewBag.Title = "Login";
}

<!DOCTYPE html>
<html>
<head>
    <style>
        #demo {
            background-image:url(../../images/360_F_355607062_zYMS8jaz4SfoykpWz5oViRVKL32IabTP.jpg);
            animation: myanimation 10s 2 ease-in-out;
        }

        @@keyframes myanimation {
            0% {
                background-image:url(../../images/360_F_355607062_zYMS8jaz4SfoykpWz5oViRVKL32IabTP.jpg);
            }

            35% {
                background-image:url(../../images/background-images-for-login-form-8.jpg);
            }

            75% {
                background-image:url(../../images/pngtree-dark-abstract-background-with-black-overlap-layers-image_313630.jpg);
            }
        }
    </style>

    <title></title>
</head>
<body id="demo">
    @Html.Raw(TempData["LoginFailed"])
    @Html.Raw(TempData["Registeration"])
    <div style="margin-top:100px; margin-left:300px;">

        @using (Html.BeginForm("Login", "Home", FormMethod.Post))
        {
            <p>
                @Html.LabelFor(x=>x.Email) &nbsp;
                @Html.TextBoxFor(x => x.Email, new { @class="form-control",placeholder="Enter Email"})
                @Html.ValidationMessageFor(x => x.Email, "", new { @class="text-danger"})
            </p>



            <p>
                @Html.LabelFor(x => x.Password) &nbsp;
                @Html.EditorFor(x => x.Password, new { htmlAttributes = new { @class = "form-control", placeholder = "Enter Password" } })
                @Html.ValidationMessageFor(x => x.Password, "", new { @class = "text-danger" })
            </p>
            <input type="submit" value="Login" class="btn btn-info" />
            <a class="btn btn-success" href="@Url.Action("Signup","Home")">Signup</a>
        }










    </div>
</body>
</html>

